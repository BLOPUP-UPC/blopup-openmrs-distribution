name: Deploy to non production environments

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Select environment
        options:
          - blopup-dev.upc.edu
          - blopup-staging.upc.edu

env:
  SSH_USER: deployment
  SSH_HOST: ${{ github.event.inputs.environment }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.2
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/remote.key
          chmod 600 ~/.ssh/remote.key
          cat >>~/.ssh/config <<END
          Host remote
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/remote.key
            StrictHostKeyChecking no
          END
        env:
          SSH_KEY: ${{ secrets.DOCKER_SSH_PRIVATE_KEY }}
      - name: Create docker .env file
        run: |
          echo "DOMAIN=\"$SSH_HOST\"" >> .env
      - name: Copy deploy files to remote host
        run: |
          scp docker-compose.yml remote:/home/$SSH_USER
          scp docker-compose-non-prod.yml remote:/home/$SSH_USER
          scp .env remote:/home/$SSH_USER
      - name: Remove previous docker containers
        run: |
          scp safe-stop-container remote:/home/$SSH_USER
          ssh remote chmod +x safe-stop-container
          ssh remote ./safe-stop-container blopup-db-1
          ssh remote ./safe-stop-container blopup-web-1
          ssh remote ./safe-stop-container blopup-reverse-proxy-1
          ssh remote ./safe-stop-container blopup-socket-proxy-1
          ssh remote rm safe-stop-container
          ssh remote docker system prune -af
      - name: Deploy
        run: |
          ssh remote docker compose -f docker-compose.yml -f docker-compose-non-prod.yml -p blopup up -d --build