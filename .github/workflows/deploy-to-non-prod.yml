name: Deploy to non production environments

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Select environment
        options:
          - blopup-dev.upc.edu
          - blopup-staging.upc.edu

env:
  SSH_USER: ${{ secrets.SSH_USER }}
  ENV: ${{ github.event.inputs.environment }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.2
      - name: install buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
          version: latest
      - name: login to docker hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      - name: build the image
        run: |
            docker buildx build --push \
              --tag blopup/openmrs-referenceapplication:latest \
              --platform linux/amd64,linux/arm64 docker/web
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/remote.key
          chmod 600 ~/.ssh/remote.key
          cat >>~/.ssh/config <<END
          Host remote
            HostName $ENV
            User $SSH_USER
            IdentityFile ~/.ssh/remote.key
            StrictHostKeyChecking no
          END
        env:
          SSH_KEY: ${{ secrets.NON_PROD_SSH_PRIVATE_KEY }}
      - name: Create legalConsentStore folder
        run: |
          ssh remote mkdir -p legalConsentStore
      - name: Create docker .env file
        run: |
          echo "$ENV_FILE" > .env
        env:
          ENV_FILE: ${{ (contains(env.ENV,'dev') && secrets.DEV_ENV_FILE) || secrets.STAGING_ENV_FILE }}
      - name: Copy deploy files to remote host
        run: |
          scp docker-compose.yml remote:/home/$SSH_USER
          scp docker-compose-non-prod.yml remote:/home/$SSH_USER
          scp .env remote:/home/$SSH_USER
      - name: Remove previous docker containers
        run: |
          scp safe-stop-container remote:/home/$SSH_USER
          ssh remote chmod +x safe-stop-container
          ssh remote ./safe-stop-container blopup-db-1
          ssh remote ./safe-stop-container blopup-web-1
          ssh remote rm safe-stop-container
          ssh remote docker system prune -af
      - name: Deploy
        run: |
          ssh remote docker compose -f docker-compose.yml -f docker-compose-non-prod.yml -p blopup up -d --build