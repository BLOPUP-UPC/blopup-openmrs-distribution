name: Deploy to production environment

on:
  workflow_dispatch:

env:
  SSH_USER: deployment
  SSH_HOST: blopup.upc.edu

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.2
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/remote.key
          chmod 600 ~/.ssh/remote.key
          cat >>~/.ssh/config <<END
          Host remote
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/remote.key
            StrictHostKeyChecking no
          END
        env:
          SSH_KEY: ${{ secrets.PROD_SSH_PRIVATE_KEY }}
      - name: Create docker .env file
        run: |
          echo "DOMAIN=\"$SSH_HOST\"" >> .env
          echo "GITHUB_USER=\"$GITHUB_USER\"" >> .env
          echo "GITHUB_PASSWORD=\"$GITHUB_PASSWORD\"" >> .env
          echo "DB_USERNAME=\"$DB_USERNAME\"" >> .env
          echo "DB_PASSWORD=\"$DB_PASSWORD\"" >> .env
          echo "CONFIG_USER=\"CONFIG_USER\"" >> .env
          echo "CONFIG_PASSWORD=\"CONFIG_PASSWORD\"" >> .env
          echo "ENCRYPT_KEY=\"ENCRYPT_KEY\"" >> .env
        env:
          GITHUB_USER: ${{ secrets.GITHUB_USER }}
          GITHUB_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
          DB_USERNAME: ${{ secrets.PROD_DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.PROD_DB_PASSWORD }}
          CONFIG_USER: ${{ secrets.CONFIG_USER }}
          CONFIG_PASSWORD: ${{ secrets.CONFIG_PASSWORD }}
          ENCRYPT_KEY: ${{ secrets.ENCRYPT_KEY }}
      - name: Copy deploy files to remote host
        run: |
          scp docker-compose.yml remote:/home/$SSH_USER
          scp docker-compose-prod.yml remote:/home/$SSH_USER
          scp .env remote:/home/$SSH_USER
      - name: Remove previous docker containers
        run: |
          scp safe-stop-container remote:/home/$SSH_USER
          ssh remote chmod +x safe-stop-container
          ssh remote ./safe-stop-container blopup-web-1
          ssh remote ./safe-stop-container blopup-reverse-proxy-1
          ssh remote ./safe-stop-container blopup-socket-proxy-1
          ssh remote ./safe-stop-container blopup-config-1
          ssh remote rm safe-stop-container
          ssh remote docker system prune -af --volumes
      - name: Deploy
        run: |
          ssh remote docker compose -f docker-compose.yml -f docker-compose-prod.yml -p blopup up -d --build