version: '3.8'

services:
  socket-proxy:
    image: tecnativa/docker-socket-proxy
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      CONTAINERS: 1

  reverse-proxy:
    image: traefik:v2.8
    command:
      - --accesslog=true
      # Docker config
      - --providers.docker
      - --providers.docker.endpoint=tcp://socket-proxy:2375
      - --providers.docker.watch=true
      - --providers.docker.exposedbydefault=false
      # Entrypoints
      - --entrypoints.web.address=:80
      # SSL
      - --entrypoints.websecure.address=:443
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.websecure.http.tls
      - --certificatesresolvers.blopupresolver.acme.storage=/acme/acme.json
      - --certificatesresolvers.blopupresolver.acme.httpchallenge.entrypoint=web
      - --entrypoints.smtp-ssl.address=:465


    ports:
      - "80:80"
      - "443:443"
      - "465:465"
    volumes:
      - reverse-proxy-data:/acme

  web:
    image: blopup/openmrs-referenceapplication:latest
    environment:
      DB_DATABASE: ${DATABASE_NAME}
      MODULE_WEB_ADMIN: 'true'   # allow web admin on OpenMRS
    labels:
      - traefik.enable=true
      - traefik.http.routers.web.rule=Host(`${DOMAIN}`)
      - traefik.http.routers.web.tls=true
      - traefik.http.routers.web.tls.certresolver=blopupresolver
      - traefik.tcp.routers.blopup_smtp_ssl.rule=HostSNI(\`*\`)
      - traefik.tcp.routers.blopup_smtp_ssl.entrypoints=smtp-ssl
      - traefik.tcp.routers.blopup_smtp_ssl.tls.passthrough=true
      - traefik.tcp.routers.blopup_smtp_ssl.service=blopup_smtp_ssl
      - traefik.tcp.services.blopup_smtp_ssl.loadbalancer.server.port=465
    volumes:
      - type: bind
        source: ./legalConsentStore
        target: /opt/app/legalConsentStore
      - web-data:/usr/local/tomcat/.OpenMRS
      - /usr/local/tomcat/.OpenMRS/modules/ # used to mount persistent docker volume for modules
      - /usr/local/tomcat/.OpenMRS/owa/     # used to mount persistent docker volume for owa

  agent:
    container_name: newrelic-infra
    build:
      context: .
      dockerfile: ./docker/web/newrelic/newrelic-infra.dockerfile
    cap_add:
      - SYS_PTRACE
    network_mode: host
    pid: host
    privileged: true
    volumes:
      - "/:/host:ro"
      - "/var/run/docker.sock:/var/run/docker.sock"
    restart: unless-stopped

volumes:
  web-data:
  reverse-proxy-data:
